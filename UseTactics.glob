DIGEST 65cd3dad4b2b9c6569f8dd928c389d35
FUseTactics
R661:675 Coq.Arith.Arith <> <> lib
R694:697 Maps <> <> lib
R715:717 Imp <> <> lib
R735:739 Types <> <> lib
R757:765 Smallstep <> <> lib
R783:792 LibTactics <> <> lib
R804:807 Stlc <> <> lib
R818:822 Equiv <> <> lib
R833:835 Imp <> <> lib
R846:855 References <> <> lib
R866:874 Smallstep <> <> lib
R885:889 Hoare <> <> lib
R900:902 Sub <> <> lib
mod 2980:2993 <> IntrovExamples
prf 3534:3552 IntrovExamples ceval_deterministic
R3591:3596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3610:3615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3619:3621 Coq.Init.Logic <> :type_scope:x_'='_x not
R3616:3618 UseTactics <> st1 var
R3622:3624 UseTactics <> st2 var
R3598:3600 Imp <> ::x_'/'_x_'\\'_x not
R3603:3606 Imp <> ::x_'/'_x_'\\'_x not
R3597:3597 UseTactics <> c var
R3601:3602 UseTactics <> st var
R3607:3609 UseTactics <> st2 var
R3579:3581 Imp <> ::x_'/'_x_'\\'_x not
R3584:3587 Imp <> ::x_'/'_x_'\\'_x not
R3578:3578 UseTactics <> c var
R3582:3583 UseTactics <> st var
R3588:3590 UseTactics <> st1 var
prf 3801:3814 IntrovExamples dist_exists_or
R3842:3845 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3841:3841 UseTactics <> X var
R3855:3855 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3876:3881 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3856:3862 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3864:3865 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3869:3872 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3866:3866 UseTactics <> P var
R3868:3868 UseTactics <> x var
R3873:3873 UseTactics <> Q var
R3875:3875 UseTactics <> x var
R3882:3882 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3896:3901 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3915:3915 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3883:3889 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3891:3892 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3893:3893 UseTactics <> P var
R3895:3895 UseTactics <> x var
R3902:3908 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3910:3911 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3912:3912 UseTactics <> Q var
R3914:3914 UseTactics <> x var
prf 4079:4098 IntrovExamples ceval_deterministic'
R4120:4120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4134:4138 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4151:4151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4165:4169 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4173:4175 Coq.Init.Logic <> :type_scope:x_'='_x not
R4170:4172 UseTactics <> st1 var
R4176:4178 UseTactics <> st2 var
R4153:4155 Imp <> ::x_'/'_x_'\\'_x not
R4158:4161 Imp <> ::x_'/'_x_'\\'_x not
R4152:4152 UseTactics <> c var
R4156:4157 UseTactics <> st var
R4162:4164 UseTactics <> st2 var
R4122:4124 Imp <> ::x_'/'_x_'\\'_x not
R4127:4130 Imp <> ::x_'/'_x_'\\'_x not
R4121:4121 UseTactics <> c var
R4125:4126 UseTactics <> st var
R4131:4133 UseTactics <> st1 var
prf 4356:4366 IntrovExamples exists_impl
R4384:4387 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4383:4383 UseTactics <> X var
R4423:4423 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4442:4453 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4474:4474 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4454:4454 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4468:4472 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4473:4473 UseTactics <> Q var
R4455:4461 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4463:4464 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4465:4465 UseTactics <> P var
R4467:4467 UseTactics <> x var
R4437:4440 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4441:4441 UseTactics <> Q var
R4434:4434 UseTactics <> P var
R4436:4436 UseTactics <> x var
R4760:4773 UseTactics IntrovExamples <> mod
mod 4889:4903 <> InvertsExamples
prf 5757:5765 InvertsExamples skip_left
R5780:5785 Equiv <> cequiv def
R5798:5798 UseTactics <> c var
R5792:5794 Imp <> ::x_';;'_x not
R5788:5791 Imp <> ::'SKIP' not
R5795:5795 UseTactics <> c var
prf 6082:6100 InvertsExamples ceval_deterministic
R6139:6145 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6159:6164 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6168:6170 Coq.Init.Logic <> :type_scope:x_'='_x not
R6165:6167 UseTactics <> st1 var
R6171:6173 UseTactics <> st2 var
R6147:6149 Imp <> ::x_'/'_x_'\\'_x not
R6152:6155 Imp <> ::x_'/'_x_'\\'_x not
R6146:6146 UseTactics <> c var
R6150:6151 UseTactics <> st var
R6156:6158 UseTactics <> st2 var
R6127:6129 Imp <> ::x_'/'_x_'\\'_x not
R6132:6135 Imp <> ::x_'/'_x_'\\'_x not
R6126:6126 UseTactics <> c var
R6130:6131 UseTactics <> st var
R6136:6138 UseTactics <> st1 var
prf 6733:6752 InvertsExamples ceval_deterministic'
R6791:6797 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6811:6816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6820:6822 Coq.Init.Logic <> :type_scope:x_'='_x not
R6817:6819 UseTactics <> st1 var
R6823:6825 UseTactics <> st2 var
R6799:6801 Imp <> ::x_'/'_x_'\\'_x not
R6804:6807 Imp <> ::x_'/'_x_'\\'_x not
R6798:6798 UseTactics <> c var
R6802:6803 UseTactics <> st var
R6808:6810 UseTactics <> st2 var
R6779:6781 Imp <> ::x_'/'_x_'\\'_x not
R6784:6787 Imp <> ::x_'/'_x_'\\'_x not
R6778:6778 UseTactics <> c var
R6782:6783 UseTactics <> st var
R6788:6790 UseTactics <> st1 var
R7491:7493 Coq.Init.Logic <> :type_scope:x_'='_x not
R7491:7493 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 8330:8339 InvertsExamples skip_left'
R8354:8359 Equiv <> cequiv def
R8372:8372 UseTactics <> c var
R8366:8368 Imp <> ::x_';;'_x not
R8362:8365 Imp <> ::'SKIP' not
R8369:8369 UseTactics <> c var
def 8659:8677 InvertsExamples typing_nonexample_1
R8683:8684 Coq.Init.Logic <> :type_scope:'~'_x not
R8685:8691 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8693:8700 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8701:8708 Stlc STLC has_type ind
R8814:8814 UseTactics <> T var
R8725:8728 Stlc STLC tabs constr
R8751:8754 Stlc STLC tabs constr
R8780:8783 Stlc STLC tapp constr
R8795:8798 Stlc STLC tvar constr
R8800:8800 Stlc STLC y def
R8786:8789 Stlc STLC tvar constr
R8791:8791 Stlc STLC x def
R8758:8762 Stlc STLC TBool constr
R8756:8756 Stlc STLC y def
R8732:8736 Stlc STLC TBool constr
R8730:8730 Stlc STLC x def
R8710:8714 Maps <> empty def
R9363:9377 UseTactics InvertsExamples <> mod
mod 10358:10369 <> NaryExamples
prf 10769:10779 NaryExamples demo_splits
R10802:10805 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10798:10800 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R10797:10797 UseTactics <> n var
R10811:10814 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10807:10809 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R10806:10806 UseTactics <> n var
R10810:10810 UseTactics <> m var
R10823:10826 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10816:10818 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R10815:10815 UseTactics <> m var
R10820:10820 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10819:10819 UseTactics <> n var
R10828:10831 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R10827:10827 UseTactics <> m var
prf 11242:11252 NaryExamples demo_branch
R11275:11278 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11271:11273 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R11270:11270 UseTactics <> n var
R11274:11274 UseTactics <> m var
R11284:11287 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11280:11282 Coq.Init.Logic <> :type_scope:x_'='_x not
R11279:11279 UseTactics <> n var
R11283:11283 UseTactics <> m var
R11289:11291 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R11288:11288 UseTactics <> m var
R11292:11292 UseTactics <> n var
R11324:11335 Coq.Arith.Compare_dec <> lt_eq_lt_dec def
R11324:11335 Coq.Arith.Compare_dec <> lt_eq_lt_dec def
prf 11967:11974 NaryExamples progress
R12019:12024 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12047:12052 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12060:12063 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12053:12057 References STLCRef value ind
R12059:12059 UseTactics <> t var
R12064:12070 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12077:12078 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12080:12082 References STLCRef ::x_'/'_x_'==>'_x_'/'_x not
R12085:12089 References STLCRef ::x_'/'_x_'==>'_x_'/'_x not
R12092:12094 References STLCRef ::x_'/'_x_'==>'_x_'/'_x not
R12079:12079 UseTactics <> t var
R12083:12084 UseTactics <> st var
R12090:12091 UseTactics <> t' var
R12095:12097 UseTactics <> st' var
R12025:12040 References STLCRef store_well_typed def
R12045:12046 UseTactics <> st var
R12042:12043 UseTactics <> ST var
R11998:12005 References STLCRef has_type ind
R12018:12018 UseTactics <> T var
R12016:12016 UseTactics <> t var
R12013:12014 UseTactics <> ST var
R12007:12011 Maps <> empty def
R12225:12229 Maps <> empty def
R12231:12232 References STLCRef ty ind
R12225:12229 Maps <> empty def
R12231:12232 References STLCRef ty ind
R12550:12553 References STLCRef tapp constr
R12556:12559 References STLCRef tabs constr
R12550:12553 References STLCRef tapp constr
R12556:12559 References STLCRef tabs constr
R12903:12914 UseTactics NaryExamples <> mod
mod 13731:13746 <> EqualityExamples
prf 14012:14022 EqualityExamples mult_0_plus
R14039:14041 Coq.Init.Datatypes <> nat ind
R14057:14059 Coq.Init.Logic <> :type_scope:x_'='_x not
R14046:14046 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14052:14055 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14048:14050 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14051:14051 UseTactics <> n var
R14056:14056 UseTactics <> m var
R14061:14063 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14060:14060 UseTactics <> n var
R14064:14064 UseTactics <> m var
R14136:14138 Coq.Init.Logic <> :type_scope:x_'='_x not
R14132:14134 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14136:14138 Coq.Init.Logic <> :type_scope:x_'='_x not
R14132:14134 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14247:14249 Coq.Init.Logic <> :type_scope:x_'='_x not
R14243:14245 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14247:14249 Coq.Init.Logic <> :type_scope:x_'='_x not
R14243:14245 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 14632:14643 EqualityExamples mult_0_plus'
R14660:14662 Coq.Init.Datatypes <> nat ind
R14678:14680 Coq.Init.Logic <> :type_scope:x_'='_x not
R14667:14667 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14673:14676 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14669:14671 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14672:14672 UseTactics <> n var
R14677:14677 UseTactics <> m var
R14682:14684 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14681:14681 UseTactics <> n var
R14685:14685 UseTactics <> m var
R14730:14732 Coq.Init.Logic <> :type_scope:x_'='_x not
R14726:14728 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14730:14732 Coq.Init.Logic <> :type_scope:x_'='_x not
R14726:14728 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 15147:15159 EqualityExamples mult_0_plus''
R15183:15185 Coq.Init.Datatypes <> nat ind
R15215:15217 Coq.Init.Logic <> :type_scope:x_'='_x not
R15190:15190 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15196:15200 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15214:15214 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15192:15194 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15191:15191 UseTactics <> u var
R15195:15195 UseTactics <> v var
R15201:15201 Coq.Init.Datatypes <> S constr
R15209:15211 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15205:15207 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15204:15204 UseTactics <> w var
R15208:15208 UseTactics <> x var
R15212:15212 UseTactics <> y var
R15218:15218 UseTactics <> z var
R15274:15276 Coq.Init.Logic <> :type_scope:x_'='_x not
R15268:15269 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15273:15273 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15267:15267 UseTactics <> a var
R15270:15270 Coq.Init.Datatypes <> S constr
R15272:15272 UseTactics <> b var
R15280:15280 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15278:15278 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15277:15277 UseTactics <> a var
R15279:15279 UseTactics <> b var
R15281:15281 UseTactics <> a var
R15274:15276 Coq.Init.Logic <> :type_scope:x_'='_x not
R15268:15269 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15273:15273 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15267:15267 UseTactics <> a var
R15270:15270 Coq.Init.Datatypes <> S constr
R15272:15272 UseTactics <> b var
R15280:15280 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15278:15278 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15277:15277 UseTactics <> a var
R15279:15279 UseTactics <> b var
R15281:15281 UseTactics <> a var
prf 15675:15685 EqualityExamples demo_substs
R15706:15707 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15708:15710 Coq.Init.Datatypes <> nat ind
R15703:15705 Coq.Init.Datatypes <> nat ind
R15723:15726 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15732:15735 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15737:15739 Coq.Init.Logic <> :type_scope:x_'='_x not
R15736:15736 UseTactics <> y var
R15740:15740 UseTactics <> f var
R15742:15742 UseTactics <> x var
R15728:15730 Coq.Init.Logic <> :type_scope:x_'='_x not
R15727:15727 UseTactics <> y var
R15731:15731 UseTactics <> x var
R15717:15719 Coq.Init.Logic <> :type_scope:x_'='_x not
R15716:15716 UseTactics <> x var
R15720:15720 UseTactics <> f var
R15722:15722 UseTactics <> x var
prf 16169:16180 EqualityExamples demo_fequals
R16204:16206 Coq.Init.Datatypes <> nat ind
R16217:16218 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16222:16223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16227:16228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16232:16233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16234:16236 Coq.Init.Datatypes <> nat ind
R16229:16231 Coq.Init.Datatypes <> nat ind
R16224:16226 Coq.Init.Datatypes <> nat ind
R16219:16221 Coq.Init.Datatypes <> nat ind
R16214:16216 Coq.Init.Datatypes <> nat ind
R16247:16250 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16256:16259 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16265:16270 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16280:16282 Coq.Init.Logic <> :type_scope:x_'='_x not
R16271:16271 UseTactics <> f var
R16279:16279 UseTactics <> d var
R16277:16277 UseTactics <> c var
R16275:16275 UseTactics <> b var
R16273:16273 UseTactics <> a var
R16283:16283 UseTactics <> f var
R16289:16289 UseTactics <> c var
R16261:16263 Coq.Init.Logic <> :type_scope:x_'='_x not
R16260:16260 UseTactics <> e var
R16252:16254 Coq.Init.Logic <> :type_scope:x_'='_x not
R16251:16251 UseTactics <> b var
R16255:16255 UseTactics <> e var
R16243:16245 Coq.Init.Logic <> :type_scope:x_'='_x not
R16242:16242 UseTactics <> a var
ax 17423:17442 EqualityExamples big_expression_using
R17449:17450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17451:17453 Coq.Init.Datatypes <> nat ind
R17446:17448 Coq.Init.Datatypes <> nat ind
prf 17489:17504 EqualityExamples demo_applys_eq_1
R17521:17522 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17526:17527 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17523:17525 Coq.Init.Datatypes <> nat ind
R17518:17520 Coq.Init.Datatypes <> nat ind
R17571:17576 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17577:17577 UseTactics <> P var
R17582:17601 UseTactics EqualityExamples big_expression_using prfax
R17603:17603 UseTactics <> y var
R17579:17579 UseTactics <> x var
R17543:17543 UseTactics <> P var
R17548:17567 UseTactics EqualityExamples big_expression_using prfax
R17569:17569 UseTactics <> z var
R17545:17545 UseTactics <> x var
R17691:17693 Coq.Init.Logic <> :type_scope:x_'='_x not
R17669:17688 UseTactics EqualityExamples big_expression_using prfax
R17694:17713 UseTactics EqualityExamples big_expression_using prfax
R17691:17693 Coq.Init.Logic <> :type_scope:x_'='_x not
R17669:17688 UseTactics EqualityExamples big_expression_using prfax
R17694:17713 UseTactics EqualityExamples big_expression_using prfax
prf 18099:18114 EqualityExamples demo_applys_eq_2
R18131:18132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18136:18137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18133:18135 Coq.Init.Datatypes <> nat ind
R18128:18130 Coq.Init.Datatypes <> nat ind
R18181:18186 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18187:18187 UseTactics <> P var
R18214:18214 UseTactics <> x var
R18190:18209 UseTactics EqualityExamples big_expression_using prfax
R18211:18211 UseTactics <> y var
R18153:18153 UseTactics <> P var
R18180:18180 UseTactics <> x var
R18156:18175 UseTactics EqualityExamples big_expression_using prfax
R18177:18177 UseTactics <> z var
prf 18513:18528 EqualityExamples demo_applys_eq_3
R18545:18546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18550:18551 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18547:18549 Coq.Init.Datatypes <> nat ind
R18542:18544 Coq.Init.Datatypes <> nat ind
R18626:18631 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18632:18632 UseTactics <> P var
R18661:18680 UseTactics EqualityExamples big_expression_using prfax
R18682:18683 UseTactics <> y1 var
R18635:18654 UseTactics EqualityExamples big_expression_using prfax
R18656:18657 UseTactics <> x1 var
R18573:18573 UseTactics <> P var
R18602:18621 UseTactics EqualityExamples big_expression_using prfax
R18623:18624 UseTactics <> y2 var
R18576:18595 UseTactics EqualityExamples big_expression_using prfax
R18597:18598 UseTactics <> x2 var
R18880:18895 UseTactics EqualityExamples <> mod
mod 19600:19613 <> UnfoldsExample
prf 19798:19811 UnfoldsExample bexp_eval_true
R19847:19850 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19852:19856 Hoare <> bassn def
R19858:19858 UseTactics <> b var
R19861:19862 UseTactics <> st var
R19840:19842 Coq.Init.Logic <> :type_scope:x_'='_x not
R19830:19834 Imp <> beval def
R19839:19839 UseTactics <> b var
R19836:19837 UseTactics <> st var
R19843:19846 Coq.Init.Datatypes <> true constr
R19929:19933 Hoare <> bassn def
R20254:20267 UseTactics UnfoldsExample <> mod
prf 20710:20719 <> demo_false
R20742:20745 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20747:20749 Coq.Init.Logic <> :type_scope:x_'='_x not
R20746:20746 UseTactics <> n var
R20738:20740 Coq.Init.Logic <> :type_scope:x_'='_x not
R20735:20735 Coq.Init.Datatypes <> S constr
R20737:20737 UseTactics <> n var
prf 20934:20947 <> demo_false_arg
R20953:20953 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20978:20982 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20983:20983 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20989:20993 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20995:20997 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R20985:20987 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R20969:20972 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20973:20977 Coq.Init.Logic <> False ind
R20965:20967 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R20964:20964 UseTactics <> n var
prf 21241:21253 <> demo_tryfalse
R21276:21279 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21281:21283 Coq.Init.Logic <> :type_scope:x_'='_x not
R21280:21280 UseTactics <> n var
R21272:21274 Coq.Init.Logic <> :type_scope:x_'='_x not
R21269:21269 Coq.Init.Datatypes <> S constr
R21271:21271 UseTactics <> n var
mod 21624:21633 <> GenExample
prf 21673:21701 GenExample substitution_preserves_typing
R21765:21773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21792:21800 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21801:21808 Stlc STLC has_type ind
R21826:21826 UseTactics <> S var
R21817:21817 Stlc STLC ::'['_x_':='_x_']'_x not
R21819:21820 Stlc STLC ::'['_x_':='_x_']'_x not
R21822:21822 Stlc STLC ::'['_x_':='_x_']'_x not
R21818:21818 UseTactics <> x var
R21821:21821 UseTactics <> v var
R21823:21823 UseTactics <> t var
R21810:21814 UseTactics <> Gamma var
R21774:21781 Stlc STLC has_type ind
R21791:21791 UseTactics <> U var
R21789:21789 UseTactics <> v var
R21783:21787 Maps <> empty def
R21734:21741 Stlc STLC has_type ind
R21764:21764 UseTactics <> S var
R21762:21762 UseTactics <> t var
R21744:21749 Maps <> update def
R21759:21759 UseTactics <> U var
R21757:21757 UseTactics <> x var
R21751:21755 UseTactics <> Gamma var
R22178:22187 UseTactics GenExample <> mod
mod 22776:22786 <> SkipExample
R22857:22861 Smallstep <> multi ind
R22864:22868 Smallstep <> astep ind
not 22829:22829 SkipExample ::x_'/'_x_'==>a*'_x
def 22956:22969 SkipExample astep_example1
R22975:22975 UseTactics SkipExample ::x_'/'_x_'==>a*'_x not
R23016:23019 UseTactics SkipExample ::x_'/'_x_'==>a*'_x not
R23031:23038 UseTactics SkipExample ::x_'/'_x_'==>a*'_x not
R23046:23046 UseTactics SkipExample ::x_'/'_x_'==>a*'_x not
R23020:23030 Imp <> empty_state def
R22976:22980 Imp <> APlus constr
R22992:22996 Imp <> AMult constr
R23008:23011 Imp <> ANum constr
R22999:23002 Imp <> ANum constr
R22983:22986 Imp <> ANum constr
R23039:23042 Imp <> ANum constr
R23065:23074 Smallstep <> multi_step constr
R23065:23074 Smallstep <> multi_step constr
R23137:23146 Smallstep <> multi_step constr
R23137:23146 Smallstep <> multi_step constr
prf 23608:23617 SkipExample demo_skipH
R23621:23624 Coq.Init.Logic <> True ind
R23658:23660 Coq.Init.Datatypes <> nat ind
R23674:23676 Coq.Init.Logic <> :type_scope:x_'='_x not
R23663:23663 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23669:23672 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23665:23667 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23668:23668 UseTactics <> n var
R23673:23673 UseTactics <> m var
R23678:23680 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23677:23677 UseTactics <> n var
R23681:23681 UseTactics <> m var
R23658:23660 Coq.Init.Datatypes <> nat ind
R23674:23676 Coq.Init.Logic <> :type_scope:x_'='_x not
R23663:23663 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23669:23672 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23665:23667 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23668:23668 UseTactics <> n var
R23673:23673 UseTactics <> m var
R23678:23680 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23677:23677 UseTactics <> n var
R23681:23681 UseTactics <> m var
prf 23840:23850 SkipExample mult_0_plus
R23867:23869 Coq.Init.Datatypes <> nat ind
R23885:23887 Coq.Init.Logic <> :type_scope:x_'='_x not
R23874:23874 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23880:23883 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23876:23878 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23879:23879 UseTactics <> n var
R23884:23884 UseTactics <> m var
R23889:23891 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23888:23888 UseTactics <> n var
R23892:23892 UseTactics <> m var
R23965:23967 Coq.Init.Logic <> :type_scope:x_'='_x not
R23961:23963 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23965:23967 Coq.Init.Logic <> :type_scope:x_'='_x not
R23961:23963 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24066:24068 Coq.Init.Logic <> :type_scope:x_'='_x not
R24062:24064 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24066:24068 Coq.Init.Logic <> :type_scope:x_'='_x not
R24062:24064 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 24746:24764 SkipExample ceval_deterministic
R24803:24808 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24822:24827 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24831:24833 Coq.Init.Logic <> :type_scope:x_'='_x not
R24828:24830 UseTactics <> st1 var
R24834:24836 UseTactics <> st2 var
R24810:24812 Imp <> ::x_'/'_x_'\\'_x not
R24815:24818 Imp <> ::x_'/'_x_'\\'_x not
R24809:24809 UseTactics <> c var
R24813:24814 UseTactics <> st var
R24819:24821 UseTactics <> st2 var
R24791:24793 Imp <> ::x_'/'_x_'\\'_x not
R24796:24799 Imp <> ::x_'/'_x_'\\'_x not
R24790:24790 UseTactics <> c var
R24794:24795 UseTactics <> st var
R24800:24802 UseTactics <> st1 var
R25392:25394 Coq.Init.Logic <> :type_scope:x_'='_x not
R25392:25394 Coq.Init.Logic <> :type_scope:x_'='_x not
R25699:25709 UseTactics SkipExample <> mod
mod 25822:25833 <> SortExamples
prf 26049:26067 SortExamples ceval_deterministic
R26106:26111 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26125:26130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26134:26136 Coq.Init.Logic <> :type_scope:x_'='_x not
R26131:26133 UseTactics <> st1 var
R26137:26139 UseTactics <> st2 var
R26113:26115 Imp <> ::x_'/'_x_'\\'_x not
R26118:26121 Imp <> ::x_'/'_x_'\\'_x not
R26112:26112 UseTactics <> c var
R26116:26117 UseTactics <> st var
R26122:26124 UseTactics <> st2 var
R26094:26096 Imp <> ::x_'/'_x_'\\'_x not
R26099:26102 Imp <> ::x_'/'_x_'\\'_x not
R26093:26093 UseTactics <> c var
R26097:26098 UseTactics <> st var
R26103:26105 UseTactics <> st1 var
R26366:26377 UseTactics SortExamples <> mod
mod 28722:28733 <> ExamplesLets
ax 28856:28875 ExamplesLets typing_inversion_var
R28889:28895 Sub <> context def
R28901:28902 Maps <> id ind
R28908:28909 Sub <> ty ind
R28936:28941 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28942:28948 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28950:28951 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28964:28967 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R28955:28957 Coq.Init.Logic <> :type_scope:x_'='_x not
R28952:28952 UseTactics <> G var
R28954:28954 UseTactics <> x var
R28958:28961 Coq.Init.Datatypes <> Some constr
R28963:28963 UseTactics <> S var
R28968:28974 Sub <> subtype ind
R28978:28978 UseTactics <> T var
R28976:28976 UseTactics <> S var
R28915:28922 Sub <> has_type ind
R28935:28935 UseTactics <> T var
R28927:28930 Sub <> tvar constr
R28932:28932 UseTactics <> x var
R28924:28924 UseTactics <> G var
prf 29237:29247 ExamplesLets demo_lets_1
R29261:29267 Sub <> context def
R29273:29274 Maps <> id ind
R29280:29281 Sub <> ty ind
R29308:29311 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29312:29315 Coq.Init.Logic <> True ind
R29287:29294 Sub <> has_type ind
R29307:29307 UseTactics <> T var
R29299:29302 Sub <> tvar constr
R29304:29304 UseTactics <> x var
R29296:29296 UseTactics <> G var
R29381:29400 UseTactics ExamplesLets typing_inversion_var prfax
R29381:29400 UseTactics ExamplesLets typing_inversion_var prfax
R29491:29510 UseTactics ExamplesLets typing_inversion_var prfax
R29491:29510 UseTactics ExamplesLets typing_inversion_var prfax
prf 29953:29963 ExamplesLets demo_lets_2
R29977:29983 Sub <> context def
R29989:29990 Maps <> id ind
R29996:29997 Sub <> ty ind
R30001:30004 Coq.Init.Logic <> True ind
R30053:30072 UseTactics ExamplesLets typing_inversion_var prfax
R30080:30082 LibTactics <> :ltac_scope:'___' not
R30053:30072 UseTactics ExamplesLets typing_inversion_var prfax
R30080:30082 LibTactics <> :ltac_scope:'___' not
prf 30459:30469 ExamplesLets demo_lets_3
R30483:30484 Maps <> id ind
R30488:30491 Coq.Init.Logic <> True ind
R30536:30555 UseTactics ExamplesLets typing_inversion_var prfax
R30559:30561 LibTactics <> :ltac_scope:'___' not
R30536:30555 UseTactics ExamplesLets typing_inversion_var prfax
R30559:30561 LibTactics <> :ltac_scope:'___' not
prf 30741:30751 ExamplesLets demo_lets_4
R30755:30758 Coq.Init.Logic <> True ind
R30791:30810 UseTactics ExamplesLets typing_inversion_var prfax
R30812:30814 LibTactics <> :ltac_scope:'___' not
R30791:30810 UseTactics ExamplesLets typing_inversion_var prfax
R30812:30814 LibTactics <> :ltac_scope:'___' not
prf 31019:31029 ExamplesLets demo_lets_5
R31033:31036 Coq.Init.Logic <> True ind
R31056:31075 UseTactics ExamplesLets typing_inversion_var prfax
R31056:31075 UseTactics ExamplesLets typing_inversion_var prfax
prf 31512:31531 ExamplesLets demo_lets_underscore
R31537:31537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31567:31571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31572:31575 Coq.Init.Logic <> True ind
R31556:31559 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31561:31563 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R31560:31560 UseTactics <> n var
R31565:31565 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31564:31564 UseTactics <> m var
R31551:31554 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R31550:31550 UseTactics <> n var
R31555:31555 UseTactics <> m var
R31998:31999 LibTactics <> :ltac_scope:'__' not
R31998:31999 LibTactics <> :ltac_scope:'__' not
R32477:32488 UseTactics ExamplesLets <> mod
mod 33776:33797 <> ExamplesInstantiations
prf 34067:34095 ExamplesInstantiations substitution_preserves_typing
R34159:34167 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34186:34194 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34195:34202 Sub <> has_type ind
R34220:34220 UseTactics <> S var
R34211:34211 Sub <> ::'['_x_':='_x_']'_x not
R34213:34214 Sub <> ::'['_x_':='_x_']'_x not
R34216:34216 Sub <> ::'['_x_':='_x_']'_x not
R34212:34212 UseTactics <> x var
R34215:34215 UseTactics <> v var
R34217:34217 UseTactics <> t var
R34204:34208 UseTactics <> Gamma var
R34168:34175 Sub <> has_type ind
R34185:34185 UseTactics <> U var
R34183:34183 UseTactics <> v var
R34177:34181 Maps <> empty def
R34128:34135 Sub <> has_type ind
R34158:34158 UseTactics <> S var
R34156:34156 UseTactics <> t var
R34138:34143 Maps <> update def
R34153:34153 UseTactics <> U var
R34151:34151 UseTactics <> x var
R34145:34149 UseTactics <> Gamma var
R34578:34597 Sub <> typing_inversion_var thm
R34578:34597 Sub <> typing_inversion_var thm
R34617:34622 Maps <> update def
R34625:34632 Maps <> t_update def
R34657:34663 Maps <> beq_idP prfax
R34657:34663 Maps <> beq_idP prfax
R34779:34783 Maps <> empty def
R34755:34772 Sub <> context_invariance thm
R34779:34783 Maps <> empty def
R34755:34772 Sub <> context_invariance thm
R34989:35003 Sub <> free_in_context thm
R35009:35013 Maps <> empty def
R35015:35016 Sub <> ty ind
R34989:35003 Sub <> free_in_context thm
R35009:35013 Maps <> empty def
R35015:35016 Sub <> ty ind
R35492:35511 Sub <> typing_inversion_abs thm
R35492:35511 Sub <> typing_inversion_abs thm
R35667:35671 Sub <> T_Sub constr
R35674:35679 Sub <> TArrow constr
R35667:35671 Sub <> T_Sub constr
R35674:35679 Sub <> TArrow constr
R35702:35706 Sub <> T_Abs constr
R35702:35706 Sub <> T_Abs constr
R35725:35731 Maps <> beq_idP prfax
R35725:35731 Maps <> beq_idP prfax
R35768:35785 Sub <> context_invariance thm
R35768:35785 Sub <> context_invariance thm
R35831:35836 Maps <> update def
R35839:35846 Maps <> t_update def
R35865:35871 Maps <> beq_idP prfax
R35865:35871 Maps <> beq_idP prfax
R35922:35939 Sub <> context_invariance thm
R35922:35939 Sub <> context_invariance thm
R35972:35977 Maps <> update def
R35980:35987 Maps <> t_update def
R36006:36012 Maps <> beq_idP prfax
R36006:36012 Maps <> beq_idP prfax
R36043:36054 Maps <> false_beq_id thm
R36043:36054 Maps <> false_beq_id thm
R36043:36054 Maps <> false_beq_id thm
R36043:36054 Maps <> false_beq_id thm
R36085:36105 Sub <> typing_inversion_true thm
R36085:36105 Sub <> typing_inversion_true thm
R36143:36164 Sub <> typing_inversion_false thm
R36143:36164 Sub <> typing_inversion_false thm
R36219:36237 Sub <> typing_inversion_if thm
R36219:36237 Sub <> typing_inversion_if thm
R36449:36469 Sub <> typing_inversion_unit thm
R36449:36469 Sub <> typing_inversion_unit thm
R36498:36519 UseTactics ExamplesInstantiations <> mod
